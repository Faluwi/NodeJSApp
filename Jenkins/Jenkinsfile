// Based on:
// https://raw.githubusercontent.com/redhat-cop/container-pipelines/master/basic-spring-boot/Jenkinsfile

library identifier: "pipeline-library@v1.5",
retriever: modernSCM(
  [
    $class: "GitSCMSource",
    remote: "https://github.com/redhat-cop/pipeline-library.git"
  ]
)

// Each resource related to your app will be given this name
appName = "hello-world"

pipeline {
    // Use the 'node' Jenkins agent image which is provided with OpenShift 
    agent { label "nodejs" }
    stages {
          stage('Cleanup') {
            steps {
                script {
                    openshift.withCluster() {
                        openshift.withProject('dev') {
                            echo "Using Project: ${openshift.project()}"
                            if(openshift.selector("all", [app: name]).exists()) {
                                openshift.selector('all', [app : name]).delete()
                                echo "Old ressources deleted"
                            }
                        }
                    }
                }
            }
        }
        stage("buildconnfig") {
          steps {
              sh 'oc create -f ./Templates/buildconfig.yaml'
          }
        }
        stage("Checkout") {
            steps {
                checkout scm
            }
        }
        stage("Testing") {
          steps {
              sh "echo 'Testing'"
          }
        }
        stage("Docker Build") {
            steps {
                // This uploads your application's source code and performs a binary build in OpenShift
                // This is a step defined in the shared library (see the top for the URL)
                // (Or you could invoke this step using 'oc' commands!)
                binaryBuild(buildConfigName: appName, buildFromPath: ".")
            }
        }

        // You could extend the pipeline by tagging the image,
        // or deploying it to a production environment, etc......
    }
}
