pipeline {
    // Use the 'node' Jenkins agent image which is provided with OpenShift 
    agent {label 'nodejs'}
    stages {
        stage("Compiling") {
            steps {
              sh "npm install"   
            }
        }
        stage("Testing") {
            steps {
                sh "npm run lint"
            }
        }
        stage ("Build2Docker") {
            steps {
                script {
                  openshift.withCluster() {
                      
                    //Create buildconfig for Docker Image
                     openshift.create("-f './Templates/dockerbuild.yaml' -n 'faluwi-dev' --follow=true")
                    //Building Docker Image and pushing to dockerhub  
                    openshift.selector("bc", "docker-test-build").startBuild("-n 'faluwi-dev' --follow=true")
                    //Clean BuildConfig
                    openshift.selector("bc", "docker-test-build").delete()
                  }//oc
                }//Script
            }//Steps
        }//stage
        stage ("Deployment"){
            agent {
                kubernetes {
                    yaml '''
                        apiVersion: v1
                        kind: Pod
                        spec:
                            containers:
                            -  name: helm-slave
                               image: docker.io/faluwi/jenkins-helm-agent:v0.1
                               imagePullPolicy: IfNotPresent
                               command:
                               - cat
                               tty: true
                               resources:
                                   limits: {}
                                   requests:
                                       memory: "256Mi"
                                       cpu: "100m"
                        '''
                }
            }
            steps {
              container('helm-slave') { 
                script {
                  openshift.withCluster() {
                    sh "helm upgrade --install testnodedeploy ./helm/testNode -n faluwi-dev --wait"
                  }
                }//Script
              }//Container
            }//Steps
        }//Stage
    }//Stages
}//Pipeline
