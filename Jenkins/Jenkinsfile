appName = "hello-world"

pipeline {
    // Use the 'node' Jenkins agent image which is provided with OpenShift 
    agent {label 'nodejs'}
    stages {
/*        stage("Testing") {
            steps {
                sh "echo 'Testing'"
                sh 'npm install'
                sh 'npm run lint'
            }
        }
        stage("Clean BuildConfig") {
            steps {
                script {
                    openshift.withCluster() {
                        openshift.withProject() {
                            if (openshift.selector("bc", 'hello-world').exists()) {
                                openshift.selector("bc", 'hello-world').delete()                       
                            }
                        }
                    }
                }
            }
        }
        stage("Build and push image to Docker") {
            steps {
                sh 'oc create -f ./Templates/buildconfig.yaml'
                sh "oc start-build hello-world --from-dir '.'"
            }
        }
        stage ("Deploy to DEV") {
            steps {
                script {
                    openshift.withCluster() {
                        openshift.withProject() {
                            if (openshift.selector("deployment", 'test').exists()) {
                                openshift.selector("deployment", 'test').delete()                       
                            }
                            if (openshift.selector("service", 'test').exists()) {
                                openshift.selector("service", 'test').delete()                       
                            }
                        }
                    }
                }
                sh "oc new-app faluwi/test:latest"
            }
        }
*/
        stage ("helm") {
            agent {
                kubernetes {
                    yaml '''
                        apiVersion: v1
                        kind: Pod
                        spec:
                            containers:
                            -  name: helm-slave
                               image: docker.io/faluwi/jenkins-helm-agent:v0.1
                               command:
                               - cat
                               tty: true
                               resources:
                                   limits: {}
                                   requests:
                                       memory: "256Mi"
                                       cpu: "100m"
                        '''
                }
            }
              steps {
                  container('helm-slave') { 
                     sh 'helm version'
                     sh "helm repo add bitnami https://charts.bitnami.com/bitnami"
                     sh "helm upgrade --install helm-sql bitnami/mysql -n faluwi-dev --wait"
                  }
             }
        }
    }//Stages
}//Pipeline
